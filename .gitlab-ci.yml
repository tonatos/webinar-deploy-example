stages:
  - build
  - clean
  - deploy


.stage_env: &stage_env
  rules:
    - if: '$CI_COMMIT_REF_NAME == "develop"'
      when: always
  variables:
    ENV: stage
    DOCKER_REGISTRY_TAG: stage
    SSH_HOST: yellow.jetstyle.ru
    SSH_USER: jetadmin
    SSH_PORT: 9078

.prod_env: &prod_env
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: always
  variables:
    ENV: prod
    DOCKER_REGISTRY_TAG: prod
    SSH_HOST: ya.ru
    SSH_USER: root
    SSH_PORT: 22


.build: &build
  stage: build
  image: lastdanmer/docker-compose
  script:
    - ln -s environments/$ENV.env .env
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.jetstyle.in
    - docker-compose build
    - docker-compose push


build-develop:
  <<: *stage_env
  <<: *build

build-master:
  <<: *prod_env
  <<: *build


.deploy: &deploy
  stage: deploy
  image: lastdanmer/ssh-client
  script:
    - ssh $SSH_USER@$SSH_HOST -p $SSH_PORT \
      "
      cd /home/$SSH_USER/deploy-example &&
      git reset --hard HEAD &&
      git checkout $CI_COMMIT_BRANCH &&
      git pull -f origin $CI_COMMIT_BRANCH &&
      ln -sf environments/$ENV.env .env &&
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.jetstyle.in &&
      docker-compose pull &&
      docker-compose up -d
      "

deploy-develop:
  <<: *stage_env
  <<: *deploy

deploy-master:
  <<: *prod_env
  <<: *deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual


clean:
  stage: clean
  image: lastdanmer/docker-compose
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: on_failure
    - if: '$CI_COMMIT_REF_NAME == "develop"'
      when: on_failure
  script:
    - docker-compose logs --tail 300
    - docker-compose down -v
